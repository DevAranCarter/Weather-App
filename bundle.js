(()=>{"use strict";var n={28:(n,e,t)=>{t.d(e,{Z:()=>c});var o=t(537),a=t.n(o),r=t(645),i=t.n(r)()(a());i.push([n.id,"body {\n    padding: 0;\n    margin: 0;\n    width: 100%;\n    height: 100vh;\n}\n\n#main{\n    padding: 0;\n    width: 100%;\n    height: 100vh;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    margin: 0;\n\n\n\n}\n\n#changeUnits{\n    align-self: flex-end;\n    height: 30px;\n    width: 100px;\n    margin-top: 5px;\n    margin-right: 5px;\n    border-radius: 5px;\n}\n\n#countryh1{\n    margin: 0;\n    margin-top: 10px;\n    padding: 0;\n}\n\n#curntWeathh2{\n    margin: 0;\n    padding-top: 15px;\n\n}\n\n#currDay {\n    padding-bottom: 0;\n    margin-bottom: 0;\n}\n\n#weathIcon{\n    margin: 0;\n    padding: 0;\n}\n\n#mainCardDiv{\n    display: flex;\n    gap: 20px;\n    text-align: center;\n}\n\n#countryel{\n    margin: 0px;\n    padding: 0;\n}\n\n#locationName{\n    border-radius: 10px;\n    border: grey 2px solid;\n\n\n}\n\n#submit {\n    border-radius: 10px;\n    border: grey 2px solid;\n}\n\n#locName{\n    padding-right: 8px;\n}","",{version:3,sources:["webpack://./src/styles.css"],names:[],mappings:"AAAA;IACI,UAAU;IACV,SAAS;IACT,WAAW;IACX,aAAa;AACjB;;AAEA;IACI,UAAU;IACV,WAAW;IACX,aAAa;IACb,aAAa;IACb,sBAAsB;IACtB,mBAAmB;IACnB,SAAS;;;;AAIb;;AAEA;IACI,oBAAoB;IACpB,YAAY;IACZ,YAAY;IACZ,eAAe;IACf,iBAAiB;IACjB,kBAAkB;AACtB;;AAEA;IACI,SAAS;IACT,gBAAgB;IAChB,UAAU;AACd;;AAEA;IACI,SAAS;IACT,iBAAiB;;AAErB;;AAEA;IACI,iBAAiB;IACjB,gBAAgB;AACpB;;AAEA;IACI,SAAS;IACT,UAAU;AACd;;AAEA;IACI,aAAa;IACb,SAAS;IACT,kBAAkB;AACtB;;AAEA;IACI,WAAW;IACX,UAAU;AACd;;AAEA;IACI,mBAAmB;IACnB,sBAAsB;;;AAG1B;;AAEA;IACI,mBAAmB;IACnB,sBAAsB;AAC1B;;AAEA;IACI,kBAAkB;AACtB",sourcesContent:["body {\n    padding: 0;\n    margin: 0;\n    width: 100%;\n    height: 100vh;\n}\n\n#main{\n    padding: 0;\n    width: 100%;\n    height: 100vh;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    margin: 0;\n\n\n\n}\n\n#changeUnits{\n    align-self: flex-end;\n    height: 30px;\n    width: 100px;\n    margin-top: 5px;\n    margin-right: 5px;\n    border-radius: 5px;\n}\n\n#countryh1{\n    margin: 0;\n    margin-top: 10px;\n    padding: 0;\n}\n\n#curntWeathh2{\n    margin: 0;\n    padding-top: 15px;\n\n}\n\n#currDay {\n    padding-bottom: 0;\n    margin-bottom: 0;\n}\n\n#weathIcon{\n    margin: 0;\n    padding: 0;\n}\n\n#mainCardDiv{\n    display: flex;\n    gap: 20px;\n    text-align: center;\n}\n\n#countryel{\n    margin: 0px;\n    padding: 0;\n}\n\n#locationName{\n    border-radius: 10px;\n    border: grey 2px solid;\n\n\n}\n\n#submit {\n    border-radius: 10px;\n    border: grey 2px solid;\n}\n\n#locName{\n    padding-right: 8px;\n}"],sourceRoot:""}]);const c=i},645:n=>{n.exports=function(n){var e=[];return e.toString=function(){return this.map((function(e){var t="",o=void 0!==e[5];return e[4]&&(t+="@supports (".concat(e[4],") {")),e[2]&&(t+="@media ".concat(e[2]," {")),o&&(t+="@layer".concat(e[5].length>0?" ".concat(e[5]):""," {")),t+=n(e),o&&(t+="}"),e[2]&&(t+="}"),e[4]&&(t+="}"),t})).join("")},e.i=function(n,t,o,a,r){"string"==typeof n&&(n=[[null,n,void 0]]);var i={};if(o)for(var c=0;c<this.length;c++){var d=this[c][0];null!=d&&(i[d]=!0)}for(var l=0;l<n.length;l++){var s=[].concat(n[l]);o&&i[s[0]]||(void 0!==r&&(void 0===s[5]||(s[1]="@layer".concat(s[5].length>0?" ".concat(s[5]):""," {").concat(s[1],"}")),s[5]=r),t&&(s[2]?(s[1]="@media ".concat(s[2]," {").concat(s[1],"}"),s[2]=t):s[2]=t),a&&(s[4]?(s[1]="@supports (".concat(s[4],") {").concat(s[1],"}"),s[4]=a):s[4]="".concat(a)),e.push(s))}},e}},537:n=>{n.exports=function(n){var e=n[1],t=n[3];if(!t)return e;if("function"==typeof btoa){var o=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),a="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(o),r="/*# ".concat(a," */");return[e].concat([r]).join("\n")}return[e].join("\n")}},379:n=>{var e=[];function t(n){for(var t=-1,o=0;o<e.length;o++)if(e[o].identifier===n){t=o;break}return t}function o(n,o){for(var r={},i=[],c=0;c<n.length;c++){var d=n[c],l=o.base?d[0]+o.base:d[0],s=r[l]||0,p="".concat(l," ").concat(s);r[l]=s+1;var u=t(p),m={css:d[1],media:d[2],sourceMap:d[3],supports:d[4],layer:d[5]};if(-1!==u)e[u].references++,e[u].updater(m);else{var A=a(m,o);o.byIndex=c,e.splice(c,0,{identifier:p,updater:A,references:1})}i.push(p)}return i}function a(n,e){var t=e.domAPI(e);return t.update(n),function(e){if(e){if(e.css===n.css&&e.media===n.media&&e.sourceMap===n.sourceMap&&e.supports===n.supports&&e.layer===n.layer)return;t.update(n=e)}else t.remove()}}n.exports=function(n,a){var r=o(n=n||[],a=a||{});return function(n){n=n||[];for(var i=0;i<r.length;i++){var c=t(r[i]);e[c].references--}for(var d=o(n,a),l=0;l<r.length;l++){var s=t(r[l]);0===e[s].references&&(e[s].updater(),e.splice(s,1))}r=d}}},569:n=>{var e={};n.exports=function(n,t){var o=function(n){if(void 0===e[n]){var t=document.querySelector(n);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(n){t=null}e[n]=t}return e[n]}(n);if(!o)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");o.appendChild(t)}},216:n=>{n.exports=function(n){var e=document.createElement("style");return n.setAttributes(e,n.attributes),n.insert(e,n.options),e}},565:(n,e,t)=>{n.exports=function(n){var e=t.nc;e&&n.setAttribute("nonce",e)}},795:n=>{n.exports=function(n){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var e=n.insertStyleElement(n);return{update:function(t){!function(n,e,t){var o="";t.supports&&(o+="@supports (".concat(t.supports,") {")),t.media&&(o+="@media ".concat(t.media," {"));var a=void 0!==t.layer;a&&(o+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),o+=t.css,a&&(o+="}"),t.media&&(o+="}"),t.supports&&(o+="}");var r=t.sourceMap;r&&"undefined"!=typeof btoa&&(o+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(r))))," */")),e.styleTagTransform(o,n,e.options)}(e,n,t)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(e)}}}},589:n=>{n.exports=function(n,e){if(e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}}}},e={};function t(o){var a=e[o];if(void 0!==a)return a.exports;var r=e[o]={id:o,exports:{}};return n[o](r,r.exports,t),r.exports}t.n=n=>{var e=n&&n.__esModule?()=>n.default:()=>n;return t.d(e,{a:e}),e},t.d=(n,e)=>{for(var o in e)t.o(e,o)&&!t.o(n,o)&&Object.defineProperty(n,o,{enumerable:!0,get:e[o]})},t.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(n){if("object"==typeof window)return window}}(),t.o=(n,e)=>Object.prototype.hasOwnProperty.call(n,e),(()=>{var n;t.g.importScripts&&(n=t.g.location+"");var e=t.g.document;if(!n&&e&&(e.currentScript&&(n=e.currentScript.src),!n)){var o=e.getElementsByTagName("script");if(o.length)for(var a=o.length-1;a>-1&&!n;)n=o[a--].src}if(!n)throw new Error("Automatic publicPath is not supported in this browser");n=n.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),t.p=n})(),t.nc=void 0,(()=>{var n=t(379),e=t.n(n),o=t(795),a=t.n(o),r=t(569),c=t.n(r),d=t(565),l=t.n(d),s=t(216),p=t.n(s),u=t(589),m=t.n(u),A=t(28),f={};f.styleTagTransform=m(),f.setAttributes=l(),f.insert=c().bind(null,"head"),f.domAPI=a(),f.insertStyleElement=p(),e()(A.Z,f),A.Z&&A.Z.locals&&A.Z.locals;const g=t.p+"804a567622f4990d4962.png",h=t.p+"01e0896e37d61712a346.png",y=t.p+"0751b3fa19bb88fcb2b3.png",C=t.p+"25ee559af817bb3a1a6a.png",x=t.p+"292cd182d572d8cc967d.jpg",v=t.p+"1a9e6ca9abc11447268b.jpg",b=t.p+"3bc26a22c45ce8118a15.jpg",I=t.p+"0e454ccbc1921e133b5e.jpg",B=document.getElementById("main");function E(n,e,t,o){let a=document.createElement("div");a.id="cardDiv";let r=document.createElement("h2"),i=document.createElement("h3"),c=document.createElement("h3"),d=document.getElementById("changeUnits");r.textContent=n,i.textContent=e;let l=!0;d.addEventListener("click",(()=>{l?(c.textContent=`${o} °F`,l=!1):(c.textContent=`${t} °C`,l=!0)})),c.textContent=`${t} °C`,document.getElementById("mainCardDiv").appendChild(a),a.appendChild(r),a.appendChild(i),w(e,a),a.appendChild(c)}function w(n,e){if(n.indexOf("cloudy")>=0||n.indexOf("Overcast")>=0||n.indexOf("Cloudy")>=0){let n=document.createElement("img");n.src=h,n.id="icon",e.appendChild(n)}else if(n.indexOf("rain")>=0){let n=document.createElement("img");n.src=y,n.id="icon",e.appendChild(n)}else if(n.indexOf("Sunny")>=0||n.indexOf("Clear")>=0){let n=document.createElement("img");n.src=g,n.id="icon",e.appendChild(n)}else if(n.indexOf("Misty")>=0){let n=document.createElement("img");n.src=C,n.id="icon",e.appendChild(n)}}function S(n){return 1==n?"Monday":2==n?"Tuesday":3==n?"Wednesday":4==n?"Thursday":5==n?"Friday":6==n?"Saturday":0==n?"Sunday":void 0}async function $(n){try{const e=await fetch(`http://api.weatherapi.com/v1/forecast.json?key=9397db559046499aa78144721231411&q=${n}&days=8`),t=await e.json();console.log(t.forecast);for(let n=1;n<8;n++)E(S(new Date(t.forecast.forecastday[n].date).getDay()),t.forecast.forecastday[n].day.condition.text,t.forecast.forecastday[n].day.maxtemp_c,t.forecast.forecastday[n].day.maxtemp_f)}catch(n){console.log(n)}}function T(n,e,t,o,a,r){let i=document.getElementById("countryh1"),c=document.getElementById("weathIcon"),d=document.getElementById("locTimeh2"),l=document.getElementById("curntWeathh2"),s=document.getElementById("currDay"),p=document.getElementById("temp_ch3"),u=document.getElementById("icon"),m=document.getElementById("changeUnits");var A;i.textContent=`${e}, ${n}`,(A=t).indexOf("rain")>=0?(B.style.backgroundImage=`url(${b})`,B.style.color="white"):A.indexOf("cloudy")>=0||A.indexOf("Overcast")>=0?(B.style.backgroundImage=`url(${x})`,B.style.color="white"):A.indexOf("Sunny")>=0||A.indexOf("Clear")>=0?(B.style.backgroundImage=`url(${v})`,B.style.color="black"):A.indexOf("Misty")>=0&&(B.style.backgroundImage=`url(${I})`,B.style.color="black"),l.textContent=t,u?(u.remove(),w(t,c)):w(t,c),d.textContent=function(n){const e=n.split(" ");console.log(e[0]),console.log(e[1]);let t=e[1].split(":"),o=t[0],a=t[1];Number(o)>=13?(o-=12,a=`${a}pm`):a=Number(o>=12)?`${a}pm`:`${a}am`;let r=e[0].split("-");return`${o}:${a} ${r[2]}-${r[1]}-${r[0]}`}(o);let f=S(new Date(o).getDay());console.log(f),s.textContent=f;let g=!0;m.addEventListener("click",(()=>{g?(p.textContent=`Temp: ${r} °F`,g=!1):(p.textContent=`Temp: ${a} °C`,g=!0)})),p.textContent=`Temp: ${a} °C`}!function(){const n=document.createElement("button");n.id="changeUnits",n.textContent="Change units";const e=document.createElement("h1");e.id="countryh1";const t=document.createElement("h2");t.id="curntWeathh2";const o=document.createElement("h2");o.id="weathIcon";const a=document.createElement("h2");a.id="currDay";const r=document.createElement("h2");r.id="locTimeh2";const i=document.createElement("h2");i.id="temp_ch3",B.append(n),B.appendChild(e),B.appendChild(t),B.appendChild(o),B.appendChild(a),B.appendChild(r),B.appendChild(i)}(),async function(){try{const n=await fetch("http://api.weatherapi.com/v1/current.json?key=9397db559046499aa78144721231411&q=london"),e=await n.json();T(e.location.country,e.location.name,e.current.condition.text,e.location.localtime,e.current.temp_c,e.current.temp_f),$("london")}catch(n){console.log(n)}}(),function(){let n=document.createElement("form");n.id="locationForm";let e=document.createElement("label");e.id="locName",e.for="locationName",e.textContent="Enter the name of a city here";let t=document.createElement("input");t.type="text",t.id="locationName",t.name="locationName";let o=document.createElement("input");o.id="submit",o.type="submit",o.value="Submit",B.appendChild(n),n.appendChild(e),n.appendChild(t),n.appendChild(o),n.addEventListener("submit",(function(n){n.preventDefault(),async function(n,e){try{const e=await fetch(`http://api.weatherapi.com/v1/current.json?key=9397db559046499aa78144721231411&q=${n}`),t=await e.json();for(T(t.location.country,t.location.name,t.current.condition.text,t.location.localtime,t.current.temp_c,t.current.temp_f),i=1;i<8;i++)document.getElementById("cardDiv").remove();$(n),console.log(t.location.country),console.log(t.location.name),console.log(t.location.localtime),console.log(`${t.current.temp_c} C`),console.log(`${t.current.temp_f} F`)}catch(n){console.log(n)}}(t.value),t.value=""}))}(),function(){const n=document.createElement("div");n.id="mainCardDiv",B.appendChild(n)}()})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,